import { NumberInputField } from 'components/form/form-components/controls/number-input-field'
import { useTimetableSchemaResolver } from 'components/form/forms/schemes/timetable-form-schema'
import { Table } from 'components/table'
import { TablePageContainer } from 'components/table-page-container'
import { useTableForm } from 'hooks/useTableForm'
import { useCallback, useRef, VFC } from 'react'
import { SubmitHandler } from 'react-hook-form'
import {
  useDeleteTimetableMutation,
  useGetTimetablesQuery,
  useUpdateTimetableMutation,
} from 'services/timetableService'
import { Timetable } from 'types'

export interface TimetablesPageProps {}

export const TimetablesPage: VFC<TimetablesPageProps> = ({}) => {
  const { data, isLoading, isError } = useGetTimetablesQuery()

  const [updateTimetable, { isLoading: isUpdating }] = useUpdateTimetableMutation()
  const [deleteTimetable, { isLoading: isDeleting }] = useDeleteTimetableMutation()

  const handleSubmit: SubmitHandler<Timetable> = useCallback(
    (timetable) => {
      console.log('üöÄ ~ submit', timetable)
      // updateRole(role)
    },
    [updateTimetable]
  )

  const handleDelete = (dataId: number) => {
    deleteTimetable(dataId)
  }

  const columnNames = useRef([
    '–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å & –ø—Ä–µ–¥–º–µ—Ç',
    '–≥—Ä—É–ø–ø–∞',
    '–Ω–æ–º–µ—Ä –ø–æ–¥–≥—Ä—É–ø–ø—ã',
    '–¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏',
    '—Ç–∏–ø –∑–∞–Ω—è—Ç–∏—è',
    '—á–∞—Å—ã –≤ —Å–µ–º–µ—Å—Ç—Ä',
    '—á–∞—Å—ã –≤ –Ω–µ–¥–µ–ª—é',
    '—Å–µ–º–µ—Å—Ç—Ä',
    '–∫—É—Ä—Å',
    '–Ω–æ–º–µ—Ä –ø–∞—Ä—ã',
    '—Ç–∏–ø –Ω–µ–¥–µ–ª–∏',
    '–∞—É–¥–∏—Ç–æ—Ä–∏—è',
    '–∫–æ—Ä–ø—É—Å',
  ])

  const mapper = (data: Timetable): Timetable => ({
    ...data,
    hoursPerWeek: data.hoursPerWeek || undefined,
  })

  const { form, onDelete, onSubmit } = useTableForm({
    resolver: useTimetableSchemaResolver(mapper),
    handleSubmit,
    handleDelete,
  })

  const {
    register,
    formState: { errors },
  } = form

  const renderEditableCell = (columnName: string, value: string, row: Timetable) => {
    if (columnName === '—á–∞—Å—ã –≤ –Ω–µ–¥–µ–ª—é')
      return (
        <NumberInputField
          minW={78}
          defaultValue={0}
          {...register('hoursPerWeek')}
          isInvalid={!!errors.hoursPerWeek}
          errorMessage={errors.hoursPerWeek?.message}
        />
      )
  }

  return (
    <TablePageContainer
      headerText="–†–∞—Å–ø–∏—Å–∞–Ω–∏—è"
      FormComponent={null}
      TableComponent={
        <Table
          data={data}
          isLoading={isLoading}
          size="sm"
          columnNames={columnNames.current}
          editable
          form={form}
          onValid={onSubmit}
          onRowDelete={onDelete}
          renderEditableCell={renderEditableCell}
        />
      }
    />
  )
}
